name: Daily GitHub Pixel Art Commit

on:
  schedule:
    - cron: '30 23 * * *'  # chaque jour Ã  23h30 UTC
  workflow_dispatch:

env:
  COMMITS_PER_PIXEL: 151  # nombre de commits pour un "1" dans la matrice

jobs:
  daily-commits:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Install Python dependencies
        run: pip install requests

      - name: Generate commits from pattern
        env:
          COMMITS_PER_PIXEL: ${{ env.COMMITS_PER_PIXEL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          python3 <<'EOF'
          import datetime, os, random, subprocess, requests, math

          COMMITS_PER_PIXEL = int(os.environ['COMMITS_PER_PIXEL'])
          GITHUB_TOKEN = os.environ['GITHUB_TOKEN']
          USERNAME = os.environ['GITHUB_ACTOR']

          today = datetime.datetime.now(datetime.UTC).date()
          weekday = today.weekday()  # 0 = lundi, 6 = dimanche
          week_number = today.isocalendar()[1] - 1

          # ======== Matrice du motif ========
          pattern = [
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0.6,0.3,1,0.6,0.3,1,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0],
          ]

          row = 0 if weekday == 6 else weekday + 1
          total_commits_today = round(pattern[row][week_number] * COMMITS_PER_PIXEL)

          # ======== RequÃªte GraphQL ========
          query = f"""
          {{
            user(login: "{USERNAME}") {{
              contributionsCollection(from: "{today}T00:00:00Z", to: "{today}T23:59:59Z") {{
                commitContributionsByRepository {{
                  contributions {{
                    totalCount
                  }}
                }}
              }}
            }}
          }}
          """

          headers = {"Authorization": f"Bearer {GITHUB_TOKEN}"}
          r = requests.post("https://api.github.com/graphql", json={"query": query}, headers=headers)

          if r.status_code != 200:
              print(f"Erreur API: {r.status_code} -> {r.text}")
              exit(1)

          data = r.json()
          if "data" not in data:
              print("RÃ©ponse inattendue de lâ€™API GitHub:")
              print(data)
              exit(1)

          already_done = sum(
              repo["contributions"]["totalCount"]
              for repo in data["data"]["user"]["contributionsCollection"]["commitContributionsByRepository"]
          )

          commits_to_make = max(0, math.ceil(total_commits_today - already_done))

          print(f"Commits dÃ©jÃ  faits aujourd'hui: {already_done}")
          print(f"Commits Ã  gÃ©nÃ©rer: {commits_to_make}")

          # ======== GÃ©nÃ©rer commits =========
          for _ in range(commits_to_make):
              easter = random.choice(['ðŸ‘¾','ðŸ›¸','âœ¨'])
              with open("daily.txt", "a") as f:
                  f.write(f"Painting commit {datetime.datetime.now(datetime.UTC)} {easter}\n")
              subprocess.run(["git", "add", "daily.txt"])
              subprocess.run(["git", "commit", "-m", f" Painting commit {datetime.datetime.now(datetime.UTC)} {easter}"])
          EOF

      - name: Push commits
        run: |
          git push
